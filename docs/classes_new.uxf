<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>6</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>450</x>
      <y>0</y>
      <w>102</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
/GameObject/
--
+get_id(): uint64_t
+get_type_id(): type_id_t


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>492</x>
      <y>42</y>
      <w>18</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>420</x>
      <y>72</y>
      <w>168</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
/GameEntity/
--
+const get_name(): const std::string&amp;
+const get_description(): const std::string&amp;
+update(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>318</x>
      <y>240</y>
      <w>156</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
/AliveEntity/
--
+get_health(): std::vector&lt;size_t&gt;&amp;;
+get_current_health(): size_t;
+get_max_health(): size_t;
+const is_alive(): bool;
+affect_health(amount: ssize_t): void;
+const get_faction_id(): size_t;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>384</x>
      <y>198</y>
      <w>126</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>190.0;10.0;190.0;40.0;10.0;40.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>450</x>
      <y>156</y>
      <w>108</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
/LevelableEntity/
--
+const get_level(): size_t
+level_up(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>492</x>
      <y>126</y>
      <w>18</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>240</x>
      <y>360</y>
      <w>162</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
/NonPlayerCharacter/
--
+const is_friendly(faction_id: size_t): bool;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>312</x>
      <y>318</y>
      <w>90</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>130.0;10.0;130.0;40.0;10.0;40.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>390</x>
      <y>510</y>
      <w>150</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>Vendor
--
+show_goods(): ItemStorage&amp;;
+const get_discount(): const float&amp;;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>318</x>
      <y>468</y>
      <w>162</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0;250.0;40.0;250.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>234</x>
      <y>510</y>
      <w>150</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>QuestGiver
--
+get_quests(): std::vector&lt;Quest&amp;&gt;&amp;;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>318</x>
      <y>468</y>
      <w>18</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>72</x>
      <y>438</y>
      <w>150</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>Enemy
--
+is_elite(): bool
+make_decision(): Action&amp;;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>258</x>
      <y>444</y>
      <w>126</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>TalkativeNPC
--
+const talk(): const std::string&amp;;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>318</x>
      <y>396</y>
      <w>18</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>138</x>
      <y>396</y>
      <w>198</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>310.0;10.0;310.0;50.0;10.0;50.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>510</y>
      <w>228</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>QuestTarget
--
+const get_related_quests(): const std::vector&lt;uint64_t&gt;&amp;;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>114</x>
      <y>468</y>
      <w>18</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>456</x>
      <y>360</y>
      <w>216</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
/HireableCharacter/
--
+get_stats(with_equipment: bool): std::vector&lt;size_t&gt;&amp;
+get_hire_cost(): size_t;
+get_salary(): size_t;
+get_inventory(): Inventory&amp;;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>384</x>
      <y>318</y>
      <w>186</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0;290.0;40.0;290.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>606</x>
      <y>156</y>
      <w>114</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
/Item/
--
+const is_equipable(): bool;
+const is_resource(): bool;
+const is_quest(): bool;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>492</x>
      <y>126</y>
      <w>186</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0;290.0;30.0;290.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>558</x>
      <y>240</y>
      <w>228</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>EquipableItem
--
+const get_stat_bonuses(): const std::vector&lt;size_t&gt;&amp;;
+const get_stat_requirements(): const std::vector&lt;size_t&gt;&amp;;
+const get_required_level(): size_t;
+const get_available_slots(): std::vector&lt;size_t&gt;;
+const get_kind(): ItemKind&amp;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>678</x>
      <y>210</y>
      <w>18</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>492</x>
      <y>198</y>
      <w>186</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0;290.0;40.0;290.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>708</x>
      <y>330</y>
      <w>222</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>QuestItem
--
+const get_related_quests(): const std::vector&lt;uint64_t&gt;&amp;;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>678</x>
      <y>210</y>
      <w>138</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0;210.0;30.0;210.0;200.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>822</x>
      <y>240</y>
      <w>120</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Resource
--
+const get_quantity(): size_t;
+add(amount:size_t): void;
+spend(amount: size_t): void;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>678</x>
      <y>210</y>
      <w>216</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0;340.0;30.0;340.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>792</x>
      <y>150</y>
      <w>234</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
ItemStorage
--
+get_items(): std::vector&lt;Item*&gt;&amp;;
+swap(from: size_t, to: size_t): void;
+swap(from: size_t, to: ItemStorage&amp;, to_slot: size_t);
+add(item: Item*): void;
+remove(from: size_t): void;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>492</x>
      <y>126</y>
      <w>384</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0;620.0;30.0;620.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>714</x>
      <y>180</y>
      <w>90</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=0..*</panel_attributes>
    <additional_attributes>130.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1050</x>
      <y>240</y>
      <w>102</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Bag
--
+get_free_slots(): size_t;
+get_size(): size_t;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1020</x>
      <y>192</y>
      <w>60</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0;80.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1032</x>
      <y>312</y>
      <w>162</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
CharacterDoll
--
+get_stat_bonuses(): std::vector&lt;size_t&gt;&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1092</x>
      <y>282</y>
      <w>18</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1080</x>
      <y>150</y>
      <w>132</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Inventory
--
+get_bags(): std::vector&lt;Bag*&gt;&amp;;
+get_equipped(): CharacterDoll&amp;;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>750</x>
      <y>138</y>
      <w>402</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;650.0;10.0;650.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1170</x>
      <y>192</y>
      <w>24</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;200.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1116</x>
      <y>192</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=1..*</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>666</x>
      <y>354</y>
      <w>426</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;60.0;680.0;60.0;680.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>534</x>
      <y>216</y>
      <w>456</w>
      <h>336</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;530.0;730.0;530.0;730.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>510</x>
      <y>420</y>
      <w>78</w>
      <h>102</h>
    </coordinates>
    <panel_attributes>lt=-
       ^
sells items to;
buys items from</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0</additional_attributes>
  </element>
</diagram>
