<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>413</x>
      <y>0</y>
      <w>133</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
/GameObject/
--
+const get_id(): size_t
+const get_type_id(): TypeId

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>504</x>
      <y>49</y>
      <w>133</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0;170.0;40.0;170.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>539</x>
      <y>91</y>
      <w>168</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>/GameObjectImpl/
--
+GameObjectImpl(id: size_t);
+GameObjectImpl();
+~GameObjectImpl();
--
-_id: size_t
_-type_id: TypeId_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>140</x>
      <y>84</y>
      <w>175</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
/GameEntity/
--
+const get_name(): const std::string&amp;;
+const get_description(): std::string&amp;;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>168</x>
      <y>49</y>
      <w>301</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>410.0;10.0;410.0;30.0;10.0;30.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>28</x>
      <y>196</y>
      <w>168</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
/LevelableEntity/
--
+const get_level(): size_t;
+const level_up(): void;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>84</x>
      <y>133</y>
      <w>147</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>190.0;10.0;190.0;50.0;10.0;50.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7</x>
      <y>287</y>
      <w>196</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
/AliveEntity/
--
+const get_health(): std::vector&lt;size_t&gt;;
+const affect_health(value: ssize_t): void;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>91</x>
      <y>245</y>
      <w>21</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>385</y>
      <w>210</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
/HireableCharacter/
--
+const get_hire_cost(): size_t;
+get_equipment(): Equipment&amp;;
+const get_stats(): const std::vector&lt;size_t&gt;&amp;;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>91</x>
      <y>336</y>
      <w>21</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>224</x>
      <y>196</y>
      <w>203</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
/Equipment/
--
+const get_size(): size_t;
+get_item(slot_id: size_t): Item*
+put_item(to_put: Item*): void
+put_item(to_put: Item*, slot_id: size_t): void
+swap(from: size_t, to: size_t): void
+drop(slot_id: size_t): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>210</x>
      <y>133</y>
      <w>126</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;160.0;50.0;160.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>203</x>
      <y>287</y>
      <w>63</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;160.0;60.0;160.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>490</x>
      <y>196</y>
      <w>126</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
/Item/
--
+get_cost(): size_t

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>210</x>
      <y>133</y>
      <w>350</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;160.0;50.0;160.0;70.0;480.0;70.0;480.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>420</x>
      <y>196</y>
      <w>84</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
&lt; is stored in
m1=1
m2=1..*</panel_attributes>
    <additional_attributes>10.0;20.0;100.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>742</x>
      <y>273</y>
      <w>70</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
/UsableItem/
--
+use(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>462</x>
      <y>273</y>
      <w>266</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
/EquipableItem/
--
+const get_stat_bonuses(): const std::vector&lt;size_t&gt;&amp;
+const get_stat_requirements(): const std::vector&lt;size_t&gt;&amp;
+const get_required_level(): size_t;
+const get_kind(): KindId;
+const get_slots(): std::vector&lt;size_t&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>91</x>
      <y>245</y>
      <w>385</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0;170.0;40.0;170.0;120.0;530.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>567</x>
      <y>231</y>
      <w>21</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>567</x>
      <y>231</y>
      <w>217</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0;290.0;40.0;290.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>287</x>
      <y>420</y>
      <w>245</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
/CharacterDoll/
--
+equip(to_equip: EquipableItem*): void
+const get_stat_bonuses(): const std::vector&lt;size_t&gt;&amp;

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>315</x>
      <y>287</y>
      <w>21</w>
      <h>147</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;190.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>203</x>
      <y>434</y>
      <w>98</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;120.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>490</x>
      <y>364</y>
      <w>35</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1..*
m2=1</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
